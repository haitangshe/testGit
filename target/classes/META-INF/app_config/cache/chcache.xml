<?xml version="1.0" encoding="UTF-8"?>
<ehcache>
    <!-- 指定一个文件目录，当EhCache把数据写到硬盘上时，将把数据写到这个文件目录下 -->
    <diskStore path="java.io.tmpdir"/>

    <!-- 设定缓存的默认数据过期策略 -->
    <defaultCache
            maxElementsInMemory="10000"
            eternal="false"
            overflowToDisk="true"
            timeToIdleSeconds="10"
            timeToLiveSeconds="20"
            diskPersistent="false"
            diskExpiryThreadIntervalSeconds="120"/>

    <!--
   配置自定义缓存：
     1.name：每个<cache>标签都对应一个缓存Map，这些Map都有自己的名字。就行当于不同的人有不同的名字来区分一样。不过绝对是唯一不重复的。
          因为缓存存放以这个名字为准缓存到对应的Map容器中，如果一样，就回导致不同的数据混在一个容器了。而咱们建立几个缓存容器的目的不就是分类缓存嘛，如果
          都放到一起，就不同建立几个<cache>了。
     2.maxElementsInMemory：缓存中允许创建的最大对象数
     3.eternal：缓存中对象是否为永久的，如果是，超时设置将被忽略，对象从不过期。
     4.timeToIdleSeconds：缓存数据的钝化时间，也就是在一个元素消亡之前，两次访问时间的最大时间间隔值，这只能在元素不是永久驻留时有效，
                  如果该值是 0 就意味着元素可以停顿无穷长的时间。
     5.timeToLiveSeconds：缓存数据的生存时间，也就是一个元素从构建到消亡的最大时间间隔值， 这只能在元素不是永久驻留时有效，如果该值是0就意味着元素可以停顿无穷长的时间。
     6.overflowToDisk：内存不足时，是否启用磁盘缓存。
     7.memoryStoreEvictionPolicy：缓存满了之后的淘汰算法。
           注意:一个ehcache.xml中不是只能写一个cache标签，可以根据缓存的对象不同而写多个cache。
      -->
    <!--  自定义缓存策略-学生信息缓存容器对应策略-->
    <cache name="studentCache"
           maxElementsInMemory="1000"
           eternal="false"
           overflowToDisk="true"
           timeToIdleSeconds="10"
           timeToLiveSeconds="20"/>
    <!--  自定义缓存策略-教师信息缓存容器对应策略-->
<!--    <cache name="techerCache"
           maxElementsInMemory="1000"
           eternal="false"
           overflowToDisk="true"
           timeToIdleSeconds="10"
           timeToLiveSeconds="20"/>
-->
</ehcache>
